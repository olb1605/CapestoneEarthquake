% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_timelin_label.R
\name{geom_timeline_label}
\alias{geom_timeline_label}
\title{Geom to add labels to the

Geom function geom_timeline_label}
\usage{
geom_timeline_label(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE, ...)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created}

\item{data}{The data to be displayed}

\item{stat}{The statistical transformation to use on the data for this layer,
as a string.}

\item{position}{Position adjustment, either as a string, or the result of a
call to a position adjustment function.}

\item{na.rm}{If `FALSE`, the default, missing values are removed with
a warning. If `TRUE`, missing values are silently removed.}

\item{show.legend}{logical. Should this layer be included in the legends?}

\item{inherit.aes}{If FALSE, overrides the default aesthetics, rather than
combining with them}

\item{...}{Other arguments passed on to the layer. it can be used to set an
aesthetic to a fixed value.}
}
\value{
function produces a plot with the annotations of the earthquake data
}
\description{
a geom for ggplot2 called geom_timeline_label() to add annotations to
the earthquake data. This geom adds a vertical line to each data point
with a text annotation (e.g. the location of the earthquake) attached
to each line. There is an option to subset to n_max number of
earthquakes, where we take the n_max largest (by magnitude) earthquakes.
Aesthetics are x, which is the date of the earthquake and label which
takes the column name from which annotations will be obtained.
}
\details{
dataframe obtained after running functions eq_clean_data()
and eq_location_clean(). Initial raw data should be downloaded from
NOAA website. The data must be cleaned using the functions eq_clean_data and eq_location_clean,
that are included in the package. Aesthetics can be specified in geom_timeline or
in ggplot
}
\examples{
\dontrun{
earthquake_tracking_clean \%>\%
dplyr::filter(COUNTRY \%in\% c("JAPAN","IRAN","PERU") & lubridate::year(DATE) >= 2016) \%>\%
ggplot() +
geom_timeline(aes(x = DATE,y = COUNTRY,color = TOTAL_DEATHS,size = EQ_PRIMARY)) +
geom_timeline_label(aes(label=LOCATION_NAME),n_max=10)+
scale_size_continuous(name = 'Richter scale value') +
scale_color_continuous(name = '# of Deaths')+
theme(legend.position="bottom", legend.box="horizontal")
}

}
